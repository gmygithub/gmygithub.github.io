<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>跳过Hexo渲染</title>
      <link href="/posts/6491/"/>
      <url>/posts/6491/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><blockquote><p>跳过Hexo指定文件的渲染</p></blockquote><a id="more"></a><h2 id="方法一-单文件"><a href="#方法一-单文件" class="headerlink" title="方法一(单文件)"></a>方法一(单文件)</h2><p>直接在博文头部加上如下设置</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>Hexo根目录下<kbd>_config.yml</kbd>中搜索<kbd>skip_render</kbd></p><hr/><p>if要跳过source文件下的test.html，配置如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">test.html</span></span><br></pre></td></tr></table></figure><blockquote><p>注意不要写成/test.html,  只能填写相对于source文件夹的相对路径</p></blockquote><p>if要忽略要source下的 test 文件夹下所有文件,  配置如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">test/*</span></span><br></pre></td></tr></table></figure><p>if要忽略 source 下的 test 文件夹下<code>.html</code>文件,  配置如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">test/*.html</span></span><br></pre></td></tr></table></figure><p>if要忽略 source 下的 test 文件夹内所有文件包括子文件夹以及子文件夹内的文件,  配置如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">test/**</span></span><br></pre></td></tr></table></figure><p>if要忽略多个路径的文件或目录,  配置如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test.html</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">test/*</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号历史资源整合</title>
      <link href="/posts/52099/"/>
      <url>/posts/52099/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p><img src="https://cdn.jsdelivr.net/gh/gmygithub/img/hexoimg/001.jpg" style="height: 96px; width: 96px; padding: 4px; background-color: white; box-shadow: 0 0 10px rgba(black, 0.2);transition: 0.4s; border-radius:50%;height: 96px;    width: 96px;    background-color: rgb(255, 255, 255);    box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 10px;    padding: 4px;    transition: all 0.4s ease 0s;"></p><div class='tip' align=center><p>微信公众号: 一生慕青鸢<p></div><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意事项:</span><br><span class="line"> pc端部分软件请关闭杀毒后再运行</span><br><span class="line"> Android端部分软件不支持华为手机</span><br></pre></td></tr></table></figure><h2 id="🎋Windows"><a href="#🎋Windows" class="headerlink" title="🎋Windows"></a>🎋<strong>Windows</strong></h2><table><thead><tr><th><strong>Windows</strong></th><th></th><th></th></tr></thead><tbody><tr><td>名称</td><td>原文</td><td>下载</td></tr><tr><td>GIF录制工具</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247484279&idx=1&sn=0557971a8458af103eae9088fbd8dc80&chksm=9f1c1960a86b9076ce006070934664b0604fd272ce5db1bf133b8b90ddfab6638f7f4cb8dd2f&token=1271927753&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://yuan.lanzous.com/i52tZezpumb">传送门</a></td></tr><tr><td>酷我音乐_vip</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&tempkey=MTA3MF9OQ2lFOU1XOXFicmZDck1TQWlKUzFiVjl4bS1JZVFaNU1xTVhKLUczVEtaaGE3YnY1d1Z4QWtYYWxWSUhpNUsxUXhQMDQ3ZXVBeDlxT09BMjhwT2ZVck50V0Foc1RQQUdXWmhvd285VUpDNV9DOWlvV3hKeFA5czNJUWdYeTdLQThnOEQzZ3Z0dktnamt0c2QxZmh0RlBQYUVCZWUyS0VKVnU4OVhBfn4=&chksm=1f1c194f286b9059d848331be6e9dcdc6146bd616a35442be3ba1ac1ce41666ac3976e2ad23b#rd">阅读原文</a></td><td><a href="https://yuan.lanzous.com/ihoC7em5x8h">传送门</a></td></tr><tr><td>idm</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247484212&idx=1&sn=66009d1d8c5e8030aebe1ce97e9b942b&chksm=9f1c1923a86b903548940045fca0f067656deff3b202894704b5554af0f32c097b77741c44a3&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="http://idman.ys168.com/">传送门</a></td></tr><tr><td>Office</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247484190&idx=1&sn=bb81d855b06cb77a9e178de7893a9551&chksm=9f1c1909a86b901f1856c7ea1d194ec8c850fd774e647b3c62f19d8b2c00cc524b5095c11a09&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://otp.landian.vip/zh-cn/">传送门</a></td></tr><tr><td>禁止win10更新</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247484060&idx=2&sn=f8604fcce0a44cde985ce3736bda29fd&chksm=9f1c188ba86b919d5656543108223708de9c7ec5f4185ff5312f616f12325dca404990068c07&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://yuan.lanzous.com/i3Ufldaxjvg">传送门</a></td></tr><tr><td>图标刷新工具</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247483937&idx=3&sn=760d28ca729dd2d633676c234ca5456c&chksm=9f1c1836a86b9120b173f131a27fe17470070fc0870ea3e4a91863bc00ad1afc056db4f720c8&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://yuan.lanzous.com/id49p4f">传送门</a></td></tr><tr><td>鼠标指针</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247483937&idx=2&sn=b53c21ecb502ba14dffce7866ca5125b&chksm=9f1c1836a86b91207c160e2bfb34ee2b6d039ccebeab226d6d33d9fd337cd310150e69e76778&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://yuan.lanzous.com/id4970d">传送门</a></td></tr><tr><td>xmind</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247483937&idx=1&sn=cda0019e4b14a3d343f3ae08ca9520ab&chksm=9f1c1836a86b912054bd60f224fc2a3511762ec06937f6aac402279346c18c10133fa920046a&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://yuan.lanzous.com/id47j1e">传送门</a></td></tr><tr><td>手心输入法</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247483863&idx=1&sn=eb64c8b1310aebaa6a5978ba04aa05c7&chksm=9f1c1bc0a86b92d652d0c037fed792dae86b7d87103518ba441a184d259cc7032fb3046b582e&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="http://www.xinshuru.com/">传送门</a></td></tr><tr><td>搜狗输入法去广</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247483863&idx=1&sn=eb64c8b1310aebaa6a5978ba04aa05c7&chksm=9f1c1bc0a86b92d652d0c037fed792dae86b7d87103518ba441a184d259cc7032fb3046b582e&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://yuan.lanzous.com/icy5yoj">传送门</a></td></tr><tr><td>浏览器皮肤包</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247483818&idx=2&sn=521b458869dd9d06e087888b01027569&chksm=9f1c1bbda86b92ab2fd4378333a841c87e473f4be455e146713473856efe8e629f02fea0fa64&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://www.themebeta.com/">传送门</a></td></tr><tr><td>新标签页</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247483818&idx=2&sn=521b458869dd9d06e087888b01027569&chksm=9f1c1bbda86b92ab2fd4378333a841c87e473f4be455e146713473856efe8e629f02fea0fa64&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://cn.infinitynewtab.com/">传送门</a></td></tr><tr><td>格式工厂</td><td>无</td><td><a href="https://yuan.lanzous.com/ichqd2f">传送门</a></td></tr><tr><td>迅雷不限速</td><td>无</td><td><a href="https://yuan.lanzous.com/ichn0he">传送门</a></td></tr><tr><td>Typora</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247483716&idx=1&sn=e833a5644595cdb7c2c545baef138ada&chksm=9f1c1b53a86b924501063edb11e3d667a398feebd9f3284d6dd04dfe4fa614b0569715b9f672&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://yuan.lanzous.com/iaxuh0f">传送门</a></td></tr><tr><td>略缩图</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247483706&idx=1&sn=76f433a25368278c68ab953be98e4469&chksm=9f1c1b2da86b923b52c7015f3803d2b855e6a7c6c76f0edd2b03cdfdc5a078fb9a9cd0d36955&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://yuan.lanzous.com/ibb70sh">传送门</a></td></tr><tr><td>finalshell</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247483692&idx=1&sn=b18612cf3faa53781ab0a2a39ecc6727&chksm=9f1c1b3ba86b922d8d58bfbdd5b74033ad1150e4b2f63547ec98c65565806cc4afce202b134d&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="http://www.hostbuf.com/">传送门</a></td></tr></tbody></table><h2 id="🍀Android"><a href="#🍀Android" class="headerlink" title="🍀Android"></a>🍀<strong>Android</strong></h2><table><thead><tr><th><strong>Android</strong></th><th></th><th></th></tr></thead><tbody><tr><td>名称</td><td>原文</td><td>下载</td></tr><tr><td>酷我音乐-车机版</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&tempkey=MTA3MF9OQ2lFOU1XOXFicmZDck1TQWlKUzFiVjl4bS1JZVFaNU1xTVhKLUczVEtaaGE3YnY1d1Z4QWtYYWxWSUhpNUsxUXhQMDQ3ZXVBeDlxT09BMjhwT2ZVck50V0Foc1RQQUdXWmhvd285VUpDNV9DOWlvV3hKeFA5czNJUWdYeTdLQThnOEQzZ3Z0dktnamt0c2QxZmh0RlBQYUVCZWUyS0VKVnU4OVhBfn4=&chksm=1f1c194f286b9059d848331be6e9dcdc6146bd616a35442be3ba1ac1ce41666ac3976e2ad23b#rd">阅读原文</a></td><td><a href="https://yuan.lanzous.com/ihoC7em5x8h">传送门</a></td></tr><tr><td>酷我音乐_VIP</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&tempkey=MTA3MF9OQ2lFOU1XOXFicmZDck1TQWlKUzFiVjl4bS1JZVFaNU1xTVhKLUczVEtaaGE3YnY1d1Z4QWtYYWxWSUhpNUsxUXhQMDQ3ZXVBeDlxT09BMjhwT2ZVck50V0Foc1RQQUdXWmhvd285VUpDNV9DOWlvV3hKeFA5czNJUWdYeTdLQThnOEQzZ3Z0dktnamt0c2QxZmh0RlBQYUVCZWUyS0VKVnU4OVhBfn4=&chksm=1f1c194f286b9059d848331be6e9dcdc6146bd616a35442be3ba1ac1ce41666ac3976e2ad23b#rd">阅读原文</a></td><td><a href="https://yuan.lanzous.com/iL2wkem5x1a">传送门</a></td></tr><tr><td>万能钥匙显密版</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247484212&idx=2&sn=dc0dd64e9280d641c58718c1cdff6259&chksm=9f1c1923a86b90354181f00983e0173bd6488bcf49cbb50ee65e1c7d9acf04f8e4cd0b549c2f&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://yuan.lanzous.com/i75q5yh">传送门</a></td></tr><tr><td>句读</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247483734&idx=1&sn=35cb13a0647f420f249c208421899457&chksm=9f1c1b41a86b9257e4022bdee27fa51aabb0174ebaffe5bb324c39738baf17339cc747661097&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="http://judouapp.com/">传送门</a></td></tr><tr><td>乐趣</td><td><a href="https://mp.weixin.qq.com/s?__biz=MzA3MjUwMzE2MA==&mid=2247483734&idx=1&sn=35cb13a0647f420f249c208421899457&chksm=9f1c1b41a86b9257e4022bdee27fa51aabb0174ebaffe5bb324c39738baf17339cc747661097&token=1304321853&lang=zh_CN#rd">阅读原文</a></td><td><a href="https://web.leqv.online/">传送门</a></td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>颜色列表</title>
      <link href="/posts/23431/"/>
      <url>/posts/23431/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h2 id="颜色列表"><a href="https://blog.yleao.com/2018/0731/%E5%AD%97%E4%BD%93%E3%80%81%E5%AD%97%E5%8F%B7%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%B5%8B%E8%AF%95.html#%E9%A2%9C%E8%89%B2%E5%88%97%E8%A1%A8" class="headerlink" title="颜色列表"></a><p id="test"><font color="#6495ED">颜</font><font color="#DC143C">色</font><font color="#008B8B">列</font><font color="#FF7F50">表</font></p></h2><table><tbody><tr><th>颜色名　　　　　</th><th>十六进制颜色值　　　　</th><th>颜色　　　　　　</th></tr><tr><td><font color="AliceBlue">AliceBlue</font></td><td><font color="#F0F8FF">#F0F8FF</font></td><td bgcolor="#F0F8FF">rgb(240, 248, 255)</td></tr><tr><td><font color="AntiqueWhite">AntiqueWhite</font></td><td><font color="#FAEBD7">#FAEBD7</font></td><td bgcolor="#FAEBD7">rgb(250, 235, 215)</td></tr><tr><td><font color="Aqua">Aqua</font></td><td><font color="#00FFFF">#00FFFF</font></td><td bgcolor="#00FFFF">rgb(0, 255, 255)</td></tr><tr><td><font color="Aquamarine">Aquamarine</font></td><td><font color="#7FFFD4">#7FFFD4</font></td><td bgcolor="#7FFFD4">rgb(127, 255, 212)</td></tr><tr><td><font color="Azure">Azure</font></td><td><font color="#F0FFFF">#F0FFFF</font></td><td bgcolor="#F0FFFF">rgb(240, 255, 255)</td></tr><tr><td><font color="Beige">Beige</font></td><td><font color="#F5F5DC">#F5F5DC</font></td><td bgcolor="#F5F5DC">rgb(245, 245, 220)</td></tr><tr><td><font color="Bisque">Bisque</font></td><td><font color="#FFE4C4">#FFE4C4</font></td><td bgcolor="#FFE4C4">rgb(255, 228, 196)</td></tr><tr><td><font color="Black">Black</font></td><td><font color="#000000">#000000</font></td><td bgcolor="#000000">rgb(0, 0, 0)</td></tr><tr><td><font color="BlanchedAlmond">BlanchedAlmond</font></td><td><font color="#FFEBCD">#FFEBCD</font></td><td bgcolor="#FFEBCD">rgb(255, 235, 205)</td></tr><tr><td><font color="Blue">Blue</font></td><td><font color="#0000FF">#0000FF</font></td><td bgcolor="#0000FF">rgb(0, 0, 255)</td></tr><tr><td><font color="BlueViolet">BlueViolet</font></td><td><font color="#8A2BE2">#8A2BE2</font></td><td bgcolor="#8A2BE2">rgb(138, 43, 226)</td></tr><tr><td><font color="Brown">Brown</font></td><td><font color="#A52A2A">#A52A2A</font></td><td bgcolor="#A52A2A">rgb(165, 42, 42)</td></tr><tr><td><font color="BurlyWood">BurlyWood</font></td><td><font color="#DEB887">#DEB887</font></td><td bgcolor="#DEB887">rgb(222, 184, 135)</td></tr><tr><td><font color="CadetBlue">CadetBlue</font></td><td><font color="#5F9EA0">#5F9EA0</font></td><td bgcolor="#5F9EA0">rgb(95, 158, 160)</td></tr><tr><td><font color="Chartreuse">Chartreuse</font></td><td><font color="#7FFF00">#7FFF00</font></td><td bgcolor="#7FFF00">rgb(127, 255, 0)</td></tr><tr><td><font color="Chocolate">Chocolate</font></td><td><font color="#D2691E">#D2691E</font></td><td bgcolor="#D2691E">rgb(210, 105, 30)</td></tr><tr><td><font color="Coral">Coral</font></td><td><font color="#FF7F50">#FF7F50</font></td><td bgcolor="#FF7F50">rgb(255, 127, 80)</td></tr><tr><td><font color="CornflowerBlue">CornflowerBlue</font></td><td><font color="#6495ED">#6495ED</font></td><td bgcolor="#6495ED">rgb(100, 149, 237)</td></tr><tr><td><font color="Cornsilk">Cornsilk</font></td><td><font color="#FFF8DC">#FFF8DC</font></td><td bgcolor="#FFF8DC">rgb(255, 248, 220)</td></tr><tr><td><font color="Crimson">Crimson</font></td><td><font color="#DC143C">#DC143C</font></td><td bgcolor="#DC143C">rgb(220, 20, 60)</td></tr><tr><td><font color="Cyan">Cyan</font></td><td><font color="#00FFFF">#00FFFF</font></td><td bgcolor="#00FFFF">rgb(0, 255, 255)</td></tr><tr><td><font color="DarkBlue">DarkBlue</font></td><td><font color="#00008B">#00008B</font></td><td bgcolor="#00008B">rgb(0, 0, 139)</td></tr><tr><td><font color="DarkCyan">DarkCyan</font></td><td><font color="#008B8B">#008B8B</font></td><td bgcolor="#008B8B">rgb(0, 139, 139)</td></tr><tr><td><font color="DarkGoldenRod">DarkGoldenRod</font></td><td><font color="#B8860B">#B8860B</font></td><td bgcolor="#B8860B">rgb(184, 134, 11)</td></tr><tr><td><font color="DarkGray">DarkGray</font></td><td><font color="#A9A9A9">#A9A9A9</font></td><td bgcolor="#A9A9A9">rgb(169, 169, 169)</td></tr><tr><td><font color="DarkGreen">DarkGreen</font></td><td><font color="#006400">#006400</font></td><td bgcolor="#006400">rgb(0, 100, 0)</td></tr><tr><td><font color="DarkKhaki">DarkKhaki</font></td><td><font color="#BDB76B">#BDB76B</font></td><td bgcolor="#BDB76B">rgb(189, 183, 107)</td></tr><tr><td><font color="DarkMagenta">DarkMagenta</font></td><td><font color="#8B008B">#8B008B</font></td><td bgcolor="#8B008B">rgb(139, 0, 139)</td></tr><tr><td><font color="DarkOliveGreen">DarkOliveGreen</font></td><td><font color="#556B2F">#556B2F</font></td><td bgcolor="#556B2F">rgb(85, 107, 47)</td></tr><tr><td><font color="Darkorange">Darkorange</font></td><td><font color="#FF8C00">#FF8C00</font></td><td bgcolor="#FF8C00">rgb(255, 140, 0)</td></tr><tr><td><font color="DarkOrchid">DarkOrchid</font></td><td><font color="#9932CC">#9932CC</font></td><td bgcolor="#9932CC">rgb(153, 50, 204)</td></tr><tr><td><font color="DarkRed">DarkRed</font></td><td><font color="#8B0000">#8B0000</font></td><td bgcolor="#8B0000">rgb(139, 0, 0)</td></tr><tr><td><font color="DarkSalmon">DarkSalmon</font></td><td><font color="#E9967A">#E9967A</font></td><td bgcolor="#E9967A">rgb(233, 150, 122)</td></tr><tr><td><font color="DarkSeaGreen">DarkSeaGreen</font></td><td><font color="#8FBC8F">#8FBC8F</font></td><td bgcolor="#8FBC8F">rgb(143, 188, 143)</td></tr><tr><td><font color="DarkSlateBlue">DarkSlateBlue</font></td><td><font color="#483D8B">#483D8B</font></td><td bgcolor="#483D8B">rgb(72, 61, 139)</td></tr><tr><td><font color="DarkSlateGray">DarkSlateGray</font></td><td><font color="#2F4F4F">#2F4F4F</font></td><td bgcolor="#2F4F4F">rgb(47, 79, 79)</td></tr><tr><td><font color="DarkTurquoise">DarkTurquoise</font></td><td><font color="#00CED1">#00CED1</font></td><td bgcolor="#00CED1">rgb(0, 206, 209)</td></tr><tr><td><font color="DarkViolet">DarkViolet</font></td><td><font color="#9400D3">#9400D3</font></td><td bgcolor="#9400D3">rgb(148, 0, 211)</td></tr><tr><td><font color="DeepPink">DeepPink</font></td><td><font color="#FF1493">#FF1493</font></td><td bgcolor="#FF1493">rgb(255, 20, 147)</td></tr><tr><td><font color="DeepSkyBlue">DeepSkyBlue</font></td><td><font color="#00BFFF">#00BFFF</font></td><td bgcolor="#00BFFF">rgb(0, 191, 255)</td></tr><tr><td><font color="DimGray">DimGray</font></td><td><font color="#696969">#696969</font></td><td bgcolor="#696969">rgb(105, 105, 105)</td></tr><tr><td><font color="DodgerBlue">DodgerBlue</font></td><td><font color="#1E90FF">#1E90FF</font></td><td bgcolor="#1E90FF">rgb(30, 144, 255)</td></tr><tr><td><font color="Feldspar">Feldspar</font></td><td><font color="#D19275">#D19275</font></td><td bgcolor="#D19275">rgb(209, 146, 117)</td></tr><tr><td><font color="FireBrick">FireBrick</font></td><td><font color="#B22222">#B22222</font></td><td bgcolor="#B22222">rgb(178, 34, 34)</td></tr><tr><td><font color="FloralWhite">FloralWhite</font></td><td><font color="#FFFAF0">#FFFAF0</font></td><td bgcolor="#FFFAF0">rgb(255, 250, 240)</td></tr><tr><td><font color="ForestGreen">ForestGreen</font></td><td><font color="#228B22">#228B22</font></td><td bgcolor="#228B22">rgb(34, 139, 34)</td></tr><tr><td><font color="Fuchsia">Fuchsia</font></td><td><font color="#FF00FF">#FF00FF</font></td><td bgcolor="#FF00FF">rgb(255, 0, 255)</td></tr><tr><td><font color="Gainsboro">Gainsboro</font></td><td><font color="#DCDCDC">#DCDCDC</font></td><td bgcolor="#DCDCDC">rgb(220, 220, 220)</td></tr><tr><td><font color="GhostWhite">GhostWhite</font></td><td><font color="#F8F8FF">#F8F8FF</font></td><td bgcolor="#F8F8FF">rgb(248, 248, 255)</td></tr><tr><td><font color="Gold">Gold</font></td><td><font color="#FFD700">#FFD700</font></td><td bgcolor="#FFD700">rgb(255, 215, 0)</td></tr><tr><td><font color="GoldenRod">GoldenRod</font></td><td><font color="#DAA520">#DAA520</font></td><td bgcolor="#DAA520">rgb(218, 165, 32)</td></tr><tr><td><font color="Gray">Gray</font></td><td><font color="#808080">#808080</font></td><td bgcolor="#808080">rgb(128, 128, 128)</td></tr><tr><td><font color="Green">Green</font></td><td><font color="#008000">#008000</font></td><td bgcolor="#008000">rgb(0, 128, 0)</td></tr><tr><td><font color="GreenYellow">GreenYellow</font></td><td><font color="#ADFF2F">#ADFF2F</font></td><td bgcolor="#ADFF2F">rgb(173, 255, 47)</td></tr><tr><td><font color="HoneyDew">HoneyDew</font></td><td><font color="#F0FFF0">#F0FFF0</font></td><td bgcolor="#F0FFF0">rgb(240, 255, 240)</td></tr><tr><td><font color="HotPink">HotPink</font></td><td><font color="#FF69B4">#FF69B4</font></td><td bgcolor="#FF69B4">rgb(255, 105, 180)</td></tr><tr><td><font color="IndianRed">IndianRed</font></td><td><font color="#CD5C5C">#CD5C5C</font></td><td bgcolor="#CD5C5C">rgb(205, 92, 92)</td></tr><tr><td><font color="Indigo">Indigo</font></td><td><font color="#4B0082">#4B0082</font></td><td bgcolor="#4B0082">rgb(75, 0, 130)</td></tr><tr><td><font color="Ivory">Ivory</font></td><td><font color="#FFFFF0">#FFFFF0</font></td><td bgcolor="#FFFFF0">rgb(255, 255, 240)</td></tr><tr><td><font color="Khaki">Khaki</font></td><td><font color="#F0E68C">#F0E68C</font></td><td bgcolor="#F0E68C">rgb(240, 230, 140)</td></tr><tr><td><font color="Lavender">Lavender</font></td><td><font color="#E6E6FA">#E6E6FA</font></td><td bgcolor="#E6E6FA">rgb(230, 230, 250)</td></tr><tr><td><font color="LavenderBlush">LavenderBlush</font></td><td><font color="#FFF0F5">#FFF0F5</font></td><td bgcolor="#FFF0F5">rgb(255, 240, 245)</td></tr><tr><td><font color="LawnGreen">LawnGreen</font></td><td><font color="#7CFC00">#7CFC00</font></td><td bgcolor="#7CFC00">rgb(124, 252, 0)</td></tr><tr><td><font color="LemonChiffon">LemonChiffon</font></td><td><font color="#FFFACD">#FFFACD</font></td><td bgcolor="#FFFACD">rgb(255, 250, 205)</td></tr><tr><td><font color="LightBlue">LightBlue</font></td><td><font color="#ADD8E6">#ADD8E6</font></td><td bgcolor="#ADD8E6">rgb(173, 216, 230)</td></tr><tr><td><font color="LightCoral">LightCoral</font></td><td><font color="#F08080">#F08080</font></td><td bgcolor="#F08080">rgb(240, 128, 128)</td></tr><tr><td><font color="LightCyan">LightCyan</font></td><td><font color="#E0FFFF">#E0FFFF</font></td><td bgcolor="#E0FFFF">rgb(224, 255, 255)</td></tr><tr><td><font color="LightGoldenRodYellow">LightGoldenRodYellow</font></td><td><font color="#FAFAD2">#FAFAD2</font></td><td bgcolor="#FAFAD2">rgb(250, 250, 210)</td></tr><tr><td><font color="LightGrey">LightGrey</font></td><td><font color="#D3D3D3">#D3D3D3</font></td><td bgcolor="#D3D3D3">rgb(211, 211, 211)</td></tr><tr><td><font color="LightGreen">LightGreen</font></td><td><font color="#90EE90">#90EE90</font></td><td bgcolor="#90EE90">rgb(144, 238, 144)</td></tr><tr><td><font color="LightPink">LightPink</font></td><td><font color="#FFB6C1">#FFB6C1</font></td><td bgcolor="#FFB6C1">rgb(255, 182, 193)</td></tr><tr><td><font color="LightSalmon">LightSalmon</font></td><td><font color="#FFA07A">#FFA07A</font></td><td bgcolor="#FFA07A">rgb(255, 160, 122)</td></tr><tr><td><font color="LightSeaGreen">LightSeaGreen</font></td><td><font color="#20B2AA">#20B2AA</font></td><td bgcolor="#20B2AA">rgb(32, 178, 170)</td></tr><tr><td><font color="LightSkyBlue">LightSkyBlue</font></td><td><font color="#87CEFA">#87CEFA</font></td><td bgcolor="#87CEFA">rgb(135, 206, 250)</td></tr><tr><td><font color="LightSlateBlue">LightSlateBlue</font></td><td><font color="#8470FF">#8470FF</font></td><td bgcolor="#8470FF">rgb(132, 112, 255)</td></tr><tr><td><font color="LightSlateGray">LightSlateGray</font></td><td><font color="#778899">#778899</font></td><td bgcolor="#778899">rgb(119, 136, 153)</td></tr><tr><td><font color="LightSteelBlue">LightSteelBlue</font></td><td><font color="#B0C4DE">#B0C4DE</font></td><td bgcolor="#B0C4DE">rgb(176, 196, 222)</td></tr><tr><td><font color="LightYellow">LightYellow</font></td><td><font color="#FFFFE0">#FFFFE0</font></td><td bgcolor="#FFFFE0">rgb(255, 255, 224)</td></tr><tr><td><font color="Lime">Lime</font></td><td><font color="#00FF00">#00FF00</font></td><td bgcolor="#00FF00">rgb(0, 255, 0)</td></tr><tr><td><font color="LimeGreen">LimeGreen</font></td><td><font color="#32CD32">#32CD32</font></td><td bgcolor="#32CD32">rgb(50, 205, 50)</td></tr><tr><td><font color="Linen">Linen</font></td><td><font color="#FAF0E6">#FAF0E6</font></td><td bgcolor="#FAF0E6">rgb(250, 240, 230)</td></tr><tr><td><font color="Magenta">Magenta</font></td><td><font color="#FF00FF">#FF00FF</font></td><td bgcolor="#FF00FF">rgb(255, 0, 255)</td></tr><tr><td><font color="Maroon">Maroon</font></td><td><font color="#800000">#800000</font></td><td bgcolor="#800000">rgb(128, 0, 0)</td></tr><tr><td><font color="MediumAquaMarine">MediumAquaMarine</font></td><td><font color="#66CDAA">#66CDAA</font></td><td bgcolor="#66CDAA">rgb(102, 205, 170)</td></tr><tr><td><font color="MediumBlue">MediumBlue</font></td><td><font color="#0000CD">#0000CD</font></td><td bgcolor="#0000CD">rgb(0, 0, 205)</td></tr><tr><td><font color="MediumOrchid">MediumOrchid</font></td><td><font color="#BA55D3">#BA55D3</font></td><td bgcolor="#BA55D3">rgb(186, 85, 211)</td></tr><tr><td><font color="MediumPurple">MediumPurple</font></td><td><font color="#9370D8">#9370D8</font></td><td bgcolor="#9370D8">rgb(147, 112, 216)</td></tr><tr><td><font color="MediumSeaGreen">MediumSeaGreen</font></td><td><font color="#3CB371">#3CB371</font></td><td bgcolor="#3CB371">rgb(60, 179, 113)</td></tr><tr><td><font color="MediumSlateBlue">MediumSlateBlue</font></td><td><font color="#7B68EE">#7B68EE</font></td><td bgcolor="#7B68EE">rgb(123, 104, 238)</td></tr><tr><td><font color="MediumSpringGreen">MediumSpringGreen</font></td><td><font color="#00FA9A">#00FA9A</font></td><td bgcolor="#00FA9A">rgb(0, 250, 154)</td></tr><tr><td><font color="MediumTurquoise">MediumTurquoise</font></td><td><font color="#48D1CC">#48D1CC</font></td><td bgcolor="#48D1CC">rgb(72, 209, 204)</td></tr><tr><td><font color="MediumVioletRed">MediumVioletRed</font></td><td><font color="#C71585">#C71585</font></td><td bgcolor="#C71585">rgb(199, 21, 133)</td></tr><tr><td><font color="MidnightBlue">MidnightBlue</font></td><td><font color="#191970">#191970</font></td><td bgcolor="#191970">rgb(25, 25, 112)</td></tr><tr><td><font color="MintCream">MintCream</font></td><td><font color="#F5FFFA">#F5FFFA</font></td><td bgcolor="#F5FFFA">rgb(245, 255, 250)</td></tr><tr><td><font color="MistyRose">MistyRose</font></td><td><font color="#FFE4E1">#FFE4E1</font></td><td bgcolor="#FFE4E1">rgb(255, 228, 225)</td></tr><tr><td><font color="Moccasin">Moccasin</font></td><td><font color="#FFE4B5">#FFE4B5</font></td><td bgcolor="#FFE4B5">rgb(255, 228, 181)</td></tr><tr><td><font color="NavajoWhite">NavajoWhite</font></td><td><font color="#FFDEAD">#FFDEAD</font></td><td bgcolor="#FFDEAD">rgb(255, 222, 173)</td></tr><tr><td><font color="Navy">Navy</font></td><td><font color="#000080">#000080</font></td><td bgcolor="#000080">rgb(0, 0, 128)</td></tr><tr><td><font color="OldLace">OldLace</font></td><td><font color="#FDF5E6">#FDF5E6</font></td><td bgcolor="#FDF5E6">rgb(253, 245, 230)</td></tr><tr><td><font color="Olive">Olive</font></td><td><font color="#808000">#808000</font></td><td bgcolor="#808000">rgb(128, 128, 0)</td></tr><tr><td><font color="OliveDrab">OliveDrab</font></td><td><font color="#6B8E23">#6B8E23</font></td><td bgcolor="#6B8E23">rgb(107, 142, 35)</td></tr><tr><td><font color="Orange">Orange</font></td><td><font color="#FFA500">#FFA500</font></td><td bgcolor="#FFA500">rgb(255, 165, 0)</td></tr><tr><td><font color="OrangeRed">OrangeRed</font></td><td><font color="#FF4500">#FF4500</font></td><td bgcolor="#FF4500">rgb(255, 69, 0)</td></tr><tr><td><font color="Orchid">Orchid</font></td><td><font color="#DA70D6">#DA70D6</font></td><td bgcolor="#DA70D6">rgb(218, 112, 214)</td></tr><tr><td><font color="PaleGoldenRod">PaleGoldenRod</font></td><td><font color="#EEE8AA">#EEE8AA</font></td><td bgcolor="#EEE8AA">rgb(238, 232, 170)</td></tr><tr><td><font color="PaleGreen">PaleGreen</font></td><td><font color="#98FB98">#98FB98</font></td><td bgcolor="#98FB98">rgb(152, 251, 152)</td></tr><tr><td><font color="PaleTurquoise">PaleTurquoise</font></td><td><font color="#AFEEEE">#AFEEEE</font></td><td bgcolor="#AFEEEE">rgb(175, 238, 238)</td></tr><tr><td><font color="PaleVioletRed">PaleVioletRed</font></td><td><font color="#D87093">#D87093</font></td><td bgcolor="#D87093">rgb(216, 112, 147)</td></tr><tr><td><font color="PapayaWhip">PapayaWhip</font></td><td><font color="#FFEFD5">#FFEFD5</font></td><td bgcolor="#FFEFD5">rgb(255, 239, 213)</td></tr><tr><td><font color="PeachPuff">PeachPuff</font></td><td><font color="#FFDAB9">#FFDAB9</font></td><td bgcolor="#FFDAB9">rgb(255, 218, 185)</td></tr><tr><td><font color="Peru">Peru</font></td><td><font color="#CD853F">#CD853F</font></td><td bgcolor="#CD853F">rgb(205, 133, 63)</td></tr><tr><td><font color="Pink">Pink</font></td><td><font color="#FFC0CB">#FFC0CB</font></td><td bgcolor="#FFC0CB">rgb(255, 192, 203)</td></tr><tr><td><font color="Plum">Plum</font></td><td><font color="#DDA0DD">#DDA0DD</font></td><td bgcolor="#DDA0DD">rgb(221, 160, 221)</td></tr><tr><td><font color="PowderBlue">PowderBlue</font></td><td><font color="#B0E0E6">#B0E0E6</font></td><td bgcolor="#B0E0E6">rgb(176, 224, 230)</td></tr><tr><td><font color="Purple">Purple</font></td><td><font color="#800080">#800080</font></td><td bgcolor="#800080">rgb(128, 0, 128)</td></tr><tr><td><font color="Red">Red</font></td><td><font color="#FF0000">#FF0000</font></td><td bgcolor="#FF0000">rgb(255, 0, 0)</td></tr><tr><td><font color="RosyBrown">RosyBrown</font></td><td><font color="#BC8F8F">#BC8F8F</font></td><td bgcolor="#BC8F8F">rgb(188, 143, 143)</td></tr><tr><td><font color="RoyalBlue">RoyalBlue</font></td><td><font color="#4169E1">#4169E1</font></td><td bgcolor="#4169E1">rgb(65, 105, 225)</td></tr><tr><td><font color="SaddleBrown">SaddleBrown</font></td><td><font color="#8B4513">#8B4513</font></td><td bgcolor="#8B4513">rgb(139, 69, 19)</td></tr><tr><td><font color="Salmon">Salmon</font></td><td><font color="#FA8072">#FA8072</font></td><td bgcolor="#FA8072">rgb(250, 128, 114)</td></tr><tr><td><font color="SandyBrown">SandyBrown</font></td><td><font color="#F4A460">#F4A460</font></td><td bgcolor="#F4A460">rgb(244, 164, 96)</td></tr><tr><td><font color="SeaGreen">SeaGreen</font></td><td><font color="#2E8B57">#2E8B57</font></td><td bgcolor="#2E8B57">rgb(46, 139, 87)</td></tr><tr><td><font color="SeaShell">SeaShell</font></td><td><font color="#FFF5EE">#FFF5EE</font></td><td bgcolor="#FFF5EE">rgb(255, 245, 238)</td></tr><tr><td><font color="Sienna">Sienna</font></td><td><font color="#A0522D">#A0522D</font></td><td bgcolor="#A0522D">rgb(160, 82, 45)</td></tr><tr><td><font color="Silver">Silver</font></td><td><font color="#C0C0C0">#C0C0C0</font></td><td bgcolor="#C0C0C0">rgb(192, 192, 192)</td></tr><tr><td><font color="SkyBlue">SkyBlue</font></td><td><font color="#87CEEB">#87CEEB</font></td><td bgcolor="#87CEEB">rgb(135, 206, 235)</td></tr><tr><td><font color="SlateBlue">SlateBlue</font></td><td><font color="#6A5ACD">#6A5ACD</font></td><td bgcolor="#6A5ACD">rgb(106, 90, 205)</td></tr><tr><td><font color="SlateGray">SlateGray</font></td><td><font color="#708090">#708090</font></td><td bgcolor="#708090">rgb(112, 128, 144)</td></tr><tr><td><font color="Snow">Snow</font></td><td><font color="#FFFAFA">#FFFAFA</font></td><td bgcolor="#FFFAFA">rgb(255, 250, 250)</td></tr><tr><td><font color="SpringGreen">SpringGreen</font></td><td><font color="#00FF7F">#00FF7F</font></td><td bgcolor="#00FF7F">rgb(0, 255, 127)</td></tr><tr><td><font color="SteelBlue">SteelBlue</font></td><td><font color="#4682B4">#4682B4</font></td><td bgcolor="#4682B4">rgb(70, 130, 180)</td></tr><tr><td><font color="Tan">Tan</font></td><td><font color="#D2B48C">#D2B48C</font></td><td bgcolor="#D2B48C">rgb(210, 180, 140)</td></tr><tr><td><font color="Teal">Teal</font></td><td><font color="#008080">#008080</font></td><td bgcolor="#008080">rgb(0, 128, 128)</td></tr><tr><td><font color="Thistle">Thistle</font></td><td><font color="#D8BFD8">#D8BFD8</font></td><td bgcolor="#D8BFD8">rgb(216, 191, 216)</td></tr><tr><td><font color="Tomato">Tomato</font></td><td><font color="#FF6347">#FF6347</font></td><td bgcolor="#FF6347">rgb(255, 99, 71)</td></tr><tr><td><font color="Turquoise">Turquoise</font></td><td><font color="#40E0D0">#40E0D0</font></td><td bgcolor="#40E0D0">rgb(64, 224, 208)</td></tr><tr><td><font color="Violet">Violet</font></td><td><font color="#EE82EE">#EE82EE</font></td><td bgcolor="#EE82EE">rgb(238, 130, 238)</td></tr><tr><td><font color="VioletRed">VioletRed</font></td><td><font color="#D02090">#D02090</font></td><td bgcolor="#D02090">rgb(208, 32, 144)</td></tr><tr><td><font color="Wheat">Wheat</font></td><td><font color="#F5DEB3">#F5DEB3</font></td><td bgcolor="#F5DEB3">rgb(245, 222, 179)</td></tr><tr><td><font color="White">White</font></td><td><font color="#FFFFFF">#FFFFFF</font></td><td bgcolor="#FFFFFF">rgb(255, 255, 255)</td></tr><tr><td><font color="WhiteSmoke">WhiteSmoke</font></td><td><font color="#F5F5F5">#F5F5F5</font></td><td bgcolor="#F5F5F5">rgb(245, 245, 245)</td></tr><tr><td><font color="Yellow">Yellow</font></td><td><font color="#FFFF00">#FFFF00</font></td><td bgcolor="#FFFF00">rgb(255, 255, 0)</td></tr><tr><td><font color="YellowGreen">YellowGreen</font></td><td><font color="#9ACD32">#9ACD32</font></td><td bgcolor="#9ACD32">rgb(154, 205, 50)</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记</title>
      <link href="/posts/9845/"/>
      <url>/posts/9845/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h2 id="第一章-常量-amp-变量"><a href="#第一章-常量-amp-变量" class="headerlink" title="第一章 常量&amp;变量"></a>第一章 常量&amp;变量</h2><h3 id="常量的概念和分类"><a href="#常量的概念和分类" class="headerlink" title="常量的概念和分类"></a>常量的概念和分类</h3><p>常量: 程序运行期间固定不变的量</p><p><strong>常量的分类</strong></p><ul><li>字符串常量: 凡是用双引号引起来的部分,叫做字符串常量 - “abc” “Hello” “123”</li><li>整数常量: 直接写上的数字,没有小数点 - 100 200 0 -250</li><li>浮点数常量: 直接写上的数字, 有小数点 - 2.5 -3.14 0.0</li><li>字符常量: 凡是单引号引起来的单个字符, 就叫字符常量 ‘A’ ‘B’ ‘中’ ‘9’ ‘b’</li><li>布尔常量: true | false</li><li>空常量: null</li></ul><h3 id="常量的打印输出"><a href="#常量的打印输出" class="headerlink" title="常量的打印输出"></a>常量的打印输出</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字符串常量</span></span><br><span class="line">System.out.println(<span class="string">&quot;ABC&quot;</span>);</span><br><span class="line"><span class="comment">// 字符串两个引号中间内容为空</span></span><br><span class="line">System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;xyz&quot;</span>);</span><br><span class="line"><span class="comment">// 整数常量</span></span><br><span class="line">System.out.println(<span class="number">30</span>);</span><br><span class="line">System.out.println(-<span class="number">500</span>);</span><br><span class="line"><span class="comment">// 浮点数常量</span></span><br><span class="line">System.out.println(<span class="number">3.14</span>);</span><br><span class="line">System.out.println(-<span class="number">2.5</span>);</span><br><span class="line"><span class="comment">// 字符常量</span></span><br><span class="line">System.out.println(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">System.out.println(<span class="string">&#x27;6&#x27;</span>);</span><br><span class="line">System.out.println(<span class="string">&#x27;中&#x27;</span>);</span><br><span class="line"><span class="comment">// 单引号之间必须有且仅有一个字符</span></span><br><span class="line"><span class="comment">// 不能连着写</span></span><br><span class="line"><span class="comment">// 错误示例</span></span><br><span class="line"><span class="comment">// System.out.println(&#x27;&#x27;);</span></span><br><span class="line"><span class="comment">// 布尔常量</span></span><br><span class="line">System.out.println(<span class="keyword">true</span>);</span><br><span class="line">System.out.println(<span class="keyword">false</span>);</span><br><span class="line"><span class="comment">// 空常量</span></span><br><span class="line"><span class="comment">// 空常量不能直接打印输出</span></span><br><span class="line"><span class="comment">// 错误示例</span></span><br><span class="line"><span class="comment">// System.out.println(null);</span></span><br></pre></td></tr></table></figure><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>基本数据类型(四类八种)</p><ul><li>整数型 byte short int long</li><li>浮点型 float double</li><li>字符型 char</li><li>布尔型 boolean</li></ul><p>引用数据类型</p><ul><li>字符串</li><li>数组</li><li>类</li><li>接口</li><li>Lambda</li></ul><table><thead><tr><th>数据类型</th><th>关键字</th><th>内存占用</th><th>取值范围</th></tr></thead><tbody><tr><td>字节型</td><td>byte</td><td>1个字节</td><td>-128 ~ 127</td></tr><tr><td>短整型</td><td>short</td><td>2个字节</td><td>-32798 ~ 32767</td></tr><tr><td>整型</td><td>int(默认)</td><td>4个字节</td><td>-231 ~ 231-1</td></tr><tr><td>长整型</td><td>long</td><td>8个字节</td><td>-263 ~ 263-1</td></tr><tr><td>单精度浮点数</td><td>float</td><td>4个字节</td><td>1.4013E ~ 3.4028E+38</td></tr><tr><td>双精度浮点数</td><td>double(默认)</td><td>8个字节</td><td>4.9E-324 ~ 1.7977E+308</td></tr><tr><td>字符型</td><td>char</td><td>2个字节</td><td>0 ~ 65535</td></tr><tr><td>布尔类型</td><td>boolean</td><td>1个字节</td><td>true | false</td></tr></tbody></table><p>取值范围和内存占用不一定相关</p><p><strong>注意事项</strong></p><ol><li>字符串不是基本类型, 而是引用类型</li><li>浮点型可能只是一个近似值, 并非精确的值 例: 1/3</li><li>数据类型与字节数不一定相关, 例如float数据范围比long更加广泛, 但float是4字节, long是8字节</li><li>浮点数当中默认类型是double, 如果一定要使用float类型, 需要加上一个后缀 F</li><li>整数默认类型是int类型, 如果一定要使用long类型,需要加上一个后缀 L</li></ol><h3 id="变量的概念及定义格式"><a href="#变量的概念及定义格式" class="headerlink" title="变量的概念及定义格式"></a>变量的概念及定义格式</h3><p>变量: 程序运行期间内容可以发生改变的量</p><p><strong>格式一</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数据类型 变量名称; <span class="comment">// 创建了一个变量</span></span><br><span class="line">变量名称 = 数据值; <span class="comment">//将右边的数据值, 赋值给左边的变量</span></span><br></pre></td></tr></table></figure><p><strong>格式二</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数据类型 变量名称 = 数据值;</span><br><span class="line"><span class="comment">// 在创建一个变量的同时,立刻放入指定的数据值</span></span><br></pre></td></tr></table></figure><h3 id="变量的基本使用"><a href="#变量的基本使用" class="headerlink" title="变量的基本使用"></a>变量的基本使用</h3><p>右侧数值不能超过左侧数据类型范围</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// int</span></span><br><span class="line"><span class="keyword">int</span> num1 = <span class="number">20</span>;</span><br><span class="line">System.out.println(num1); <span class="comment">// 20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// byte</span></span><br><span class="line"><span class="comment">// 右侧数值不能超过左侧数据类型范围</span></span><br><span class="line"><span class="keyword">byte</span> num2 = <span class="number">30</span>;</span><br><span class="line">System.out.println(num2); <span class="comment">// 30</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// short</span></span><br><span class="line"><span class="keyword">short</span> num3 = <span class="number">50</span>;</span><br><span class="line">System.out.println(num3); <span class="comment">// 50</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// long</span></span><br><span class="line"><span class="comment">// 后缀 &#x27;L&#x27;</span></span><br><span class="line"><span class="keyword">long</span> num4 = <span class="number">30000000L</span>;</span><br><span class="line">System.out.println(num4); <span class="comment">// 30000000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// float</span></span><br><span class="line"><span class="comment">// 后缀 &#x27;F&#x27;</span></span><br><span class="line"><span class="keyword">float</span> num5 = <span class="number">2.25F</span>;</span><br><span class="line">System.out.println(num5); <span class="comment">// 2.25</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// double</span></span><br><span class="line"><span class="keyword">double</span> num6 = <span class="number">1.2</span>;</span><br><span class="line">System.out.println(num6); <span class="comment">// 1.2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// char</span></span><br><span class="line"><span class="keyword">char</span> zifu1 = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">System.out.println(zifu1); <span class="comment">// A</span></span><br><span class="line"><span class="keyword">char</span> zifu2 = <span class="string">&#x27;中&#x27;</span>;</span><br><span class="line">System.out.println(zifu2); <span class="comment">//中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// boolean</span></span><br><span class="line"><span class="keyword">boolean</span> var1 = <span class="keyword">true</span>;</span><br><span class="line">System.out.println(var1); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">boolean</span> var2 = <span class="keyword">false</span>;</span><br><span class="line">System.out.println(var2); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将一个变量的数据内容,赋值给另一个变量</span></span><br><span class="line"><span class="keyword">boolean</span> var3 = var1;</span><br><span class="line">System.out.println(var3); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="变量的注意事项"><a href="#变量的注意事项" class="headerlink" title="变量的注意事项"></a>变量的注意事项</h3><ol><li>如果创建多个变量, 变量之间名称不能重复</li><li>对于float和long类型来说, 不要忘记后缀F和L</li><li>右侧数据值不能超过左侧数据类型范围</li><li>没有进行赋值的变量不能直接使用</li><li>变量使用不能超过作用域范围 [作用域]: 从定义变量的一行开始, 一直到所属大括号结束</li><li>可以通过一个语句来创建多个变量, 但一般不推荐使用</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 同时创建三个全是int类型的变量</span></span><br><span class="line"><span class="keyword">int</span> a, b, c;</span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = <span class="number">20</span>;</span><br><span class="line">c = <span class="number">30</span>;</span><br><span class="line">System.out.println(a);</span><br><span class="line">System.out.println(b);</span><br><span class="line">System.out.println(c);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 同时创建三个全是int类型的变量并赋值</span></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">100</span>, y = <span class="number">200</span>, z = <span class="number">300</span>;</span><br><span class="line">System.out.println(a);</span><br><span class="line">System.out.println(b);</span><br><span class="line">System.out.println(c);</span><br></pre></td></tr></table></figure><h2 id="第二章-数据类型转换"><a href="#第二章-数据类型转换" class="headerlink" title="第二章 数据类型转换"></a>第二章 数据类型转换</h2><h3 id="自动转换"><a href="#自动转换" class="headerlink" title="自动转换"></a>自动转换</h3><p>当数据类型不一样时, 将会发生数据类型转换</p><p><strong>自动类型转换 (隐式)</strong></p><ul><li>特点: 代码不需要进行特殊处理, 自动完成</li><li>规则: 数据范围从大到小</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 左边是long 右边是int</span></span><br><span class="line"><span class="comment">// int --&gt; long</span></span><br><span class="line"><span class="comment">// 从小到大</span></span><br><span class="line"><span class="keyword">long</span> num1 = <span class="number">100</span></span><br><span class="line">System.out.println(num1); <span class="comment">// 100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 左边是double 右边是float</span></span><br><span class="line"><span class="comment">// 从小到大</span></span><br><span class="line"><span class="comment">// float --&gt; double</span></span><br><span class="line"><span class="keyword">double</span> num2 = <span class="number">2.5F</span>;</span><br><span class="line">System.out.println(num2); <span class="comment">// 2.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 左边float 右边long</span></span><br><span class="line"><span class="comment">// long --&gt; float</span></span><br><span class="line"><span class="keyword">float</span> num3 = <span class="number">30L</span>;</span><br><span class="line">System.out.println(num3); <span class="comment">//30.0</span></span><br><span class="line"><span class="comment">// 因为float是浮点型 所以输出为30.0</span></span><br></pre></td></tr></table></figure><h3 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h3><p><strong>强制类型转换 (显式)</strong></p><ul><li>特点: 代码需要进行特殊处理, 不能自动完成</li><li>格式: 范围小的类型 范围小的变量名 = (范围小的类型) 原本范围大的数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 左边int 右边long</span></span><br><span class="line"><span class="comment">// 不是从小到大 不能自动转换</span></span><br><span class="line"><span class="comment">// 范围小的类型 范围小的变量名 = (范围小的类型) 原本范围大的数据</span></span><br><span class="line"><span class="keyword">int</span> num = (<span class="keyword">int</span>) <span class="number">100L</span>;</span><br><span class="line">System.out.println(num); <span class="comment">// 100</span></span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>强制类型转换一般不推荐使用, 因为有可能发生精度损失, 数据溢出</li><li>byte/short/char这三种类型都可以发生数学运算</li><li>byte/short/char这三种类型在运算时, 都会首先提升成为int类型, 在进行运算</li><li>boolean类型不能发生数据类型转换</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数据溢出</span></span><br><span class="line"><span class="comment">// long --&gt; int</span></span><br><span class="line"><span class="keyword">int</span> num = (<span class="keyword">int</span>) <span class="number">6000000000L</span>;</span><br><span class="line">System.out.println(num); <span class="comment">// 1705032704</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 精度损失 </span></span><br><span class="line"><span class="comment">// 不是四舍五入</span></span><br><span class="line"><span class="comment">// double --&gt; int</span></span><br><span class="line"><span class="keyword">int</span> num1 = <span class="number">3.99</span>;</span><br><span class="line">System.out.println(num1); <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算机的底层会用一个数字(二进制)来代表字符A就是65</span></span><br><span class="line"><span class="comment">// 一旦char进行数据运算, 那么字符会被翻译成数字</span></span><br><span class="line"><span class="keyword">char</span> zifu = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">System.out.println(zifu); <span class="comment">// 66</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// byte + byte --&gt; int + int --&gt; int</span></span><br><span class="line"><span class="keyword">byte</span> num4 = <span class="number">40</span>;</span><br><span class="line"><span class="keyword">byte</span> num5 = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">int</span> result1 = num4 + num5;</span><br><span class="line">System.out.println(result1); <span class="comment">// 90</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// byte + short --&gt; int + int --&gt; int</span></span><br><span class="line"><span class="comment">// 必须保证逻辑上真实大小没有超过short范围, 不然会发生数据溢出</span></span><br><span class="line"><span class="keyword">short</span> num6 = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">short</span> result2 = (<span class="keyword">short</span>) (num4 + num6);</span><br><span class="line">System.out.println(result2);</span><br></pre></td></tr></table></figure><h3 id="编码表"><a href="#编码表" class="headerlink" title="编码表"></a>编码表</h3><p>数字和字符的对照关系表 (编码表)</p><p>ASCII码表: 美国信息交换标准代码</p><p>Unicode: 万国码, 开头0~127部分和ASCII完全一致, 从128开始包含更多字符</p><p>A –&gt; 65</p><p>a –&gt; 97</p><p>0 –&gt; 48</p><p>中 –&gt; 20013</p><h2 id="第三章-运算符"><a href="#第三章-运算符" class="headerlink" title="第三章 运算符"></a>第三章 运算符</h2><h3 id="运算符的定义"><a href="#运算符的定义" class="headerlink" title="运算符的定义"></a>运算符的定义</h3><p>运算符: 进行特定操作的符号</p><p>表达式: 用运算符连起来的式子</p><ul><li>一旦有不同类型变量, 那么结果会是数据类型范围大的那种</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">10</span>;</span><br><span class="line"><span class="comment">// int + double --&gt; double + double --&gt; double</span></span><br><span class="line"><span class="keyword">double</span> result = x + <span class="number">2.5</span>;</span><br><span class="line">System.out.println(result); <span class="comment">// 12.5</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>算数运算符</th><th></th></tr></thead><tbody><tr><td><code>+</code></td><td>加法</td></tr><tr><td><code>-</code></td><td>减法</td></tr><tr><td><code>*</code></td><td>乘法</td></tr><tr><td><code>/</code></td><td>除法</td></tr><tr><td><code>%</code></td><td>取模</td></tr><tr><td><code>++</code> <code>--</code></td><td>自增自减</td></tr></tbody></table><h3 id="加号的多种用法"><a href="#加号的多种用法" class="headerlink" title="加号的多种用法"></a>加号的多种用法</h3><ul><li>对于数值来说, 就是加法</li><li>对于字符串String来说, 代表连接操作</li></ul><p><strong>优先级</strong> 小括号高于一切</p><h3 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h3><p>含义: 让一个变量涨一个数字, 或者降一个数字</p><p>使用格式: 放在变量名称前后 例: ++num num–</p><p>使用方式</p><ul><li>单独使用: 独立成为一个步骤</li><li>混合使用: 和赋值混合,或者和打印混合使用</li></ul><p>使用区别</p><ul><li>单独使用时: 前++和后++没有区别</li><li>混合使用时:<ul><li>如果是前++,立刻马上+1 [先加后用]</li><li>如果是后++,先使用原来的值,然后在让变量+1 [先用后加]</li></ul></li></ul><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a += <span class="number">1</span>   --&gt;   a = a + <span class="number">1</span></span><br><span class="line">a -= <span class="number">8</span>   --&gt;   a = a - <span class="number">8</span></span><br><span class="line">a *= <span class="number">7</span>   --&gt;   a = a * <span class="number">7</span></span><br><span class="line">a /= <span class="number">5</span>   --&gt;   a = a / <span class="number">5</span></span><br><span class="line">a %= <span class="number">2</span>   --&gt;   a = a % <span class="number">2</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>赋值运算符</th><th></th></tr></thead><tbody><tr><td><code>=</code></td><td>赋值</td></tr><tr><td><code>+=</code></td><td>加等于</td></tr><tr><td><code>-=</code></td><td>减等于</td></tr><tr><td><code>*=</code></td><td>乘等于</td></tr><tr><td><code>/=</code></td><td>除等于</td></tr><tr><td><code>%=</code></td><td>取模等</td></tr></tbody></table><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><ul><li>比较运算符的结果一定是boolean值</li><li>如果多次判断, 不能连着写,例1 &lt; x &lt; 3</li></ul><table><thead><tr><th>比较运算符</th><th></th></tr></thead><tbody><tr><td><code>==</code></td><td>等于</td></tr><tr><td><code>&lt;</code></td><td>如果小于,结果为true</td></tr><tr><td><code>&gt;</code></td><td>如果大于,结果为true</td></tr><tr><td><code>&lt;=</code></td><td>如果大于等于,结果为true</td></tr><tr><td><code>&gt;=</code></td><td>如果小于等于,结果为true</td></tr><tr><td><code>!=</code></td><td>不等于,如果不等于,结果为true</td></tr></tbody></table><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><ul><li>&amp;&amp;: 全是true, 才是true, 否则为false</li><li>||: 至少一个true就是true, 全是false, 才是false</li><li>!: 本来是true, 变成false, 本来是false, 变成true</li></ul><p><code>&amp;&amp;</code>和<code>||</code>具有短路效果: 如果左边已经可以判断最终结果, 那么右边代码将不再执行, 从而节省性能</p><p>注意事项</p><ul><li>逻辑运算符只能用于boolean值</li><li>与, 或, 左右需要各有一个boolean值, 而取反只要有唯一的一个boolean值即可</li><li>与, 或, 如果有多个条件, 可以连续写</li></ul><table><thead><tr><th>逻辑运算符</th><th></th></tr></thead><tbody><tr><td><code>&amp;&amp;</code></td><td>与(并且)</td></tr><tr><td>||</td><td>或(或者)</td></tr><tr><td><code>!</code></td><td>非(取反)</td></tr></tbody></table><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><ul><li>一元: 只需要一个数据就可以进行的操作 例 取反,自增,自减</li><li>二元: 需要两个数据 例 加法</li><li>三元: 需要三个数据</li></ul><p>流程</p><ul><li>首先判断条件是否成立</li><li>如果true, 那么将A赋值给左边</li><li>如果false, 那么将B赋值给左边</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 格式</span></span><br><span class="line">数据类型 变量名称 = 条件判断 ? 表达式A : 表达式B</span><br><span class="line"><span class="comment">// 判断 a &gt; b 是否成立</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> max = a &gt; b ? a : b;</span><br><span class="line">System.out.println(<span class="string">&quot;最大值&quot;</span> + max); <span class="comment">//20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以直接写在输出中</span></span><br><span class="line">System.out.println(a &gt; b ? a : b;);</span><br></pre></td></tr></table></figure><p>注意事项</p><ul><li>必须保证A和B满足左侧数据类型要求</li></ul><h2 id="第四章-选择语句"><a href="#第四章-选择语句" class="headerlink" title="第四章 选择语句"></a>第四章 选择语句</h2><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><p>如果true,则执行语句体</p><p>格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (关系表达式) &#123;</span><br><span class="line">    语句体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if…else"><a href="#if…else" class="headerlink" title="if…else"></a>if…else</h3><p>如果true,则执行语句体1, 如果false, 则执行语句体2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (关系表达式) &#123;</span><br><span class="line">    语句体<span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    语句体<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="复合if-else"><a href="#复合if-else" class="headerlink" title="复合if..else"></a>复合if..else</h3><p>条件1满足, 执行语句1</p><p>如果不满足则看条件二是否满足, 若满足,则执行语句2</p><p>…</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (判断条件<span class="number">1</span>) &#123;</span><br><span class="line">    执行语句<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (判断条件<span class="number">2</span>) &#123;</span><br><span class="line">    执行语句<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">……</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (判断条件n) &#123;</span><br><span class="line">    执行语句n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    执行语句n + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><p>格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (表达式)&#123;</span><br><span class="line">    <span class="keyword">case</span> 常量值<span class="number">1</span>:</span><br><span class="line">        语句体<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> 常量值<span class="number">2</span>:</span><br><span class="line">        语句体<span class="number">2</span>;</span><br><span class="line">        braek;</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        语句体n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo07Switch</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (num) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期一&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期二&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期三&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期四&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期五&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期六&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;星期天&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;数据不合理&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意事项</strong></p><ul><li>多个case后面的值不可以重复</li><li>switch后面小括号当中只能是下列数据类型</li></ul><p>byte/short/char/int</p><p>引用数据类型: String字符串, enum枚举</p><ul><li>switch语句格式可以很灵活: 前后顺序可以颠倒, 且break语句可以省略</li></ul><h2 id="第五章-循环语句"><a href="#第五章-循环语句" class="headerlink" title="第五章 循环语句"></a>第五章 循环语句</h2><h3 id="基本组成"><a href="#基本组成" class="headerlink" title="基本组成"></a>基本组成</h3><ol><li>初始化语句: 在循坏开始最初执行, 而且只做唯一一次</li><li>条件判断: 如果成立, 则循环继续; 如果不成立 ,则退出循环</li><li>循环体: 重复要做的事情内容, 若干行语句</li><li>步进循环: 每次循环之后都要进行的扫尾工作, 每次循环结束之后都要执行一次</li></ol><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化表达式①; 布尔表达式②; 步进表达式④) &#123;</span><br><span class="line">        循环体③</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行顺序: ①②③④&gt;②③④&gt;②③④&gt;…②不满足为止</p><p>示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo09</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我错了&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;程序结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><p>标准格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (条件判断) &#123;</span><br><span class="line">    循环体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>扩展格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">while</span> (条件判断) &#123;</span><br><span class="line">    循环体;</span><br><span class="line">    步进表达式;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo10</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= <span class="number">10</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我错了&quot;</span> + i);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;over&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do…while"><a href="#do…while" class="headerlink" title="do…while"></a>do…while</h3><p>标准格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    循环体</span><br><span class="line">&#125; <span class="keyword">while</span> (条件判断);</span><br></pre></td></tr></table></figure><p>扩展格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句①</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    循环体;③</span><br><span class="line">    步进语句;④</span><br><span class="line">&#125; <span class="keyword">while</span> (条件判断);②</span><br></pre></td></tr></table></figure><p>执行顺序: ①③④&gt;②③④&gt;②③④…②不满足为止</p><p>演示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo11</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;    <span class="comment">// 1.初始化语句</span></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输出&quot;</span> + i);    <span class="comment">// 3.循环体</span></span><br><span class="line">            i++;    <span class="comment">// 4.步进语句</span></span><br><span class="line">        &#125; <span class="keyword">while</span>(i &lt;= <span class="number">10</span>);    <span class="comment">// 2.条件判断</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求1-100所有偶数和"><a href="#求1-100所有偶数和" class="headerlink" title="求1~100所有偶数和"></a>求1~100所有偶数和</h3><p>判断偶数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">num % 2 &#x3D;&#x3D; 0</span><br><span class="line">public class Demo12 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int sum &#x3D; 0; &#x2F;&#x2F;用来累加的存钱罐</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        for (int i &#x3D; 1; i &lt;&#x3D; 100; i++) &#123;</span><br><span class="line">            if (i % 2 &#x3D;&#x3D; 0) &#123; &#x2F;&#x2F; 如果是偶数</span><br><span class="line">                sum +&#x3D; i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(&quot;结果是:&quot; + sum);</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;-------------&quot;);</span><br><span class="line"></span><br><span class="line">        int i &#x3D; 1;</span><br><span class="line">        while (i &lt;&#x3D; 100 &amp;&amp; i % 2 &#x3D;&#x3D; 0) &#123;</span><br><span class="line">            sum +&#x3D; i;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(&quot;结果是:&quot; + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三种循环的区别"><a href="#三种循环的区别" class="headerlink" title="三种循环的区别"></a>三种循环的区别</h3><ul><li>如果条件从来没有满足过, 那么for循环和while循环会执行0次, 但是do-while循环会执行至少1次</li><li>for的变量在小括号当中定义, 只有循环内部才可以使用, while和do-while初始化语句本来就在外边, 所以循环后还可以继续使用</li></ul><h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><p>break关键字用法:</p><ol><li>可以用在switch语句中,一旦执行,整个switch语句立刻结束.</li><li>还可以用在循环语句当中, 一旦执行,整个循环语句立刻结束,打破循环.</li></ol><p>关于循环选择的建议</p><ul><li>凡是次数确定的场景多用for循环; 否则多用while循环.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo12</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="comment">// 如果希望从第四次开始,后续全部不要,就要打断循环</span></span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">4</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;hello&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><ul><li>一旦执行立刻跳过当前次循环剩余内容,马上开始下一次循环</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo12</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//如果当前是第四层,那么跳过当次循环,马上开始下一次循环</span></span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">4</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(i + <span class="string">&quot;层到了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="死循环"><a href="#死循环" class="headerlink" title="死循环"></a>死循环</h3><p>永远停不下来的循环,叫做死循环</p><p>标准格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">    循环体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="循环嵌套"><a href="#循环嵌套" class="headerlink" title="循环嵌套"></a>循环嵌套</h3><p>打印输出时分秒</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo12</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> hour = <span class="number">0</span>; hour &lt; <span class="number">24</span>; hour++) &#123;<span class="comment">// 外层控制小时</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> min = <span class="number">0</span>; min &lt; <span class="number">60</span>; min++) &#123;<span class="comment">// 中层控制分钟</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> sec = <span class="number">0</span>; sec &lt; <span class="number">60</span>; sec++) &#123;<span class="comment">// 内层控制秒钟</span></span><br><span class="line">                    System.out.println(hour + <span class="string">&quot;点&quot;</span> + min + <span class="string">&quot;分&quot;</span> + sec + <span class="string">&quot;秒&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第六章-IDEA"><a href="#第六章-IDEA" class="headerlink" title="第六章 IDEA"></a>第六章 IDEA</h2><h3 id="idea–常用快捷键"><a href="#idea–常用快捷键" class="headerlink" title="idea–常用快捷键"></a>idea–常用快捷键</h3><table><thead><tr><th>快捷键</th><th>功能</th></tr></thead><tbody><tr><td><code>Alt+Enter</code></td><td>导入包, 自动修正代码</td></tr><tr><td><code>Ctrl+Y</code></td><td>删除光标所在行</td></tr><tr><td><code>Ctrl+D</code></td><td>复制光标所在行的内容, 插入光标位置下面</td></tr><tr><td><code>Ctrl+Alt+L</code></td><td>格式化代码</td></tr><tr><td><code>Ctrl+/</code></td><td>单行注释, 再按取消注释</td></tr><tr><td><code>Ctrl+Shift+/</code></td><td>选中代码注释, 多行注释</td></tr><tr><td><code>Alt+Ins</code></td><td>自动生成代码, toString,get,set等方法</td></tr><tr><td><code>Alt+Shift+上下箭头</code></td><td>移动当前行代码</td></tr></tbody></table><h2 id="第七章-方法"><a href="#第七章-方法" class="headerlink" title="第七章 方法"></a>第七章 方法</h2><h3 id="简单方法的使用"><a href="#简单方法的使用" class="headerlink" title="简单方法的使用"></a>简单方法的使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">     System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// println --&gt; 换行</span></span><br><span class="line"><span class="comment">// print --&gt; 不换行</span></span><br></pre></td></tr></table></figure><p><strong>方法基础</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义格式</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名称 () &#123;</span><br><span class="line">    方法体</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">方法名称 ();</span><br></pre></td></tr></table></figure><p>注意事项</p><ul><li>方法定义的顺序是无所谓的</li><li>方法定义必须是挨着的, 不能在一个方法的内部定义另外一个方法</li><li>方法定义后, 自己不会执行, 必须进行调用</li></ul><h3 id="方法定义格式"><a href="#方法定义格式" class="headerlink" title="方法定义格式"></a>方法定义格式</h3><p>方法其实就是若干语句的功能合集</p><p>参数 (原料): 进入方法的数据</p><p>返回值 (产出物): 从方法中出来的数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义方法的完整格式</span></span><br><span class="line">修饰符 返回值类型 方法名称(参数类型 参数名称, ...) &#123;</span><br><span class="line">    方法体</span><br><span class="line">    <span class="keyword">return</span> 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>修饰符: 现阶段固定写法, public void</p></blockquote><blockquote><p>返回值类型: 也就是方法最终产生的数据结果是什么类型</p></blockquote><blockquote><p>方法名称: 方法的名字,规则和变量一致, 小驼峰</p></blockquote><blockquote><p>参数类型: 进入方法的数据是什么类型</p></blockquote><blockquote><p>参数名称: 进入方法的数据的变量名称</p></blockquote><blockquote><p>PS: 参数如果有多个使用逗号进行分割</p></blockquote><blockquote><p>方法体: 方法需要做的事情, 若干行代码</p></blockquote><blockquote><p>return: 两个作用, 第一个停止当前方法, 第二个将后面的返回值还给调用处</p></blockquote><blockquote><p>返回值: 也就是方法执行后最终产生的数据结果</p></blockquote><blockquote><p>return后面的 “返回值” , 必须和方法名称前面的 “返回值类型” ,保持对应</p></blockquote><h3 id="方法的三种调用格式"><a href="#方法的三种调用格式" class="headerlink" title="方法的三种调用格式"></a>方法的三种调用格式</h3><ol><li>单独调用: 方法名称(参数);</li><li>打印调用: System.out.println(方法名称(参数));</li><li>赋值调用: 数据类型 变量名称 = 方法名称(参数);</li></ol><p><strong>注意</strong>: 此前学习的方法, 返回值类型固定写为void, 这种方法只能够单独调用, 不能打印调用或者赋值调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 单独调用</span></span><br><span class="line">        sum(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;========&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印调用</span></span><br><span class="line">        System.out.println(sum(<span class="number">10</span>,<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 赋值调用</span></span><br><span class="line">        <span class="keyword">int</span> number = sum(<span class="number">15</span>,<span class="number">25</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;值为&quot;</span> + number);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = a + b;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="有参数和无参数"><a href="#有参数和无参数" class="headerlink" title="有参数和无参数"></a>有参数和无参数</h3><p>有参数: 小括号中有内容, 当一个方法需要一些数据条件, 才能完成任务的时候, 就是有参数</p><p>无参数: 小括号中留空, 一个方法不需要任何数据条件, 自己就能独立完成, 就是无参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        method1(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        method2();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = a * b;</span><br><span class="line">        System.out.println(<span class="string">&quot;结果是&quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;hello,world!&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="有返回值和无返回值"><a href="#有返回值和无返回值" class="headerlink" title="有返回值和无返回值"></a>有返回值和无返回值</h3><p>有返回值,可以使用三种调用格式</p><p>无返回值, 只能使用单独调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num = getSum(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;返回值是&quot;</span> + num);</span><br><span class="line"></span><br><span class="line">        printSum(<span class="number">100</span>,<span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = a + b;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printSum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = a + b;</span><br><span class="line">        System.out.println(<span class="string">&quot;结果是&quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法练习1-比较两个数字"><a href="#方法练习1-比较两个数字" class="headerlink" title="方法练习1_比较两个数字"></a>方法练习1_比较两个数字</h3><blockquote><p>要求: 定义一个方法, 判断两个数字是否相同</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(isSame(<span class="number">10</span>,<span class="number">20</span>));</span><br><span class="line">        System.out.println(isSame(<span class="number">20</span>,<span class="number">20</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSame</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求出1-100所有的和"><a href="#求出1-100所有的和" class="headerlink" title="求出1~100所有的和"></a>求出1~100所有的和</h3><blockquote><p>要求: 定义一个方法, 用来求出1~100所有数字的和值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;结果是&quot;</span> + getSum());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打印指定次数"><a href="#打印指定次数" class="headerlink" title="打印指定次数"></a>打印指定次数</h3><blockquote><p>要求: 定义一个方法, 打印指定次数的hello world</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        printCount(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printCount</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;hello world&quot;</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用方法的注意事项"><a href="#使用方法的注意事项" class="headerlink" title="使用方法的注意事项"></a>使用方法的注意事项</h3><ul><li>方法应该定义在类当中,不能在方法中再定义方法, 不能嵌套</li><li>方法定义的前后顺序无所谓</li><li>方法调用后不会执行，一定要调用后才会执行</li><li>如果方法有返回值, 必须写上”return“</li><li>return返回值数据, 必须和方法的返回值类型相对应</li><li>对于一个 void 没有返回值的方法,就不能写return后面的返回值, 只能写return自己</li><li>对于方法中最后一行的return可以省略不写</li><li>一个方法当中可以有多个return，但必须保证同时只有一个被使用</li></ul><h2 id="第八章-方法重载"><a href="#第八章-方法重载" class="headerlink" title="第八章 方法重载"></a>第八章 方法重载</h2><h3 id="方法重载的基本使用"><a href="#方法重载的基本使用" class="headerlink" title="方法重载的基本使用"></a>方法重载的基本使用</h3><blockquote><p>方法重载（<em>over load</em> ）：多个方法的名称一样，但参数列表不一样</p></blockquote><p>好处：只需要记住唯一一个方法名称，就可以实现类似多个功能</p><h3 id="方法重载的注意事项"><a href="#方法重载的注意事项" class="headerlink" title="方法重载的注意事项"></a>方法重载的注意事项</h3><ul><li><p>方法重载与下列因素有关</p><ul><li>参数个数不同</li><li>参数类型不同</li><li>参数的多类型顺序不同</li></ul></li><li><p>方法重载与下列因素无关</p><ul><li>与参数名称无关</li><li>与方法返回值类型无关</li></ul></li></ul><h3 id="方法重载练习题一"><a href="#方法重载练习题一" class="headerlink" title="方法重载练习题一"></a>方法重载练习题一</h3><p>要求：比较两个数据是否相等</p><p>参数类型分别为byte，short，int，long类型</p><p>并在main中进行测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">byte</span> b = <span class="number">20</span>;</span><br><span class="line">        System.out.println(isSame(a,b));</span><br><span class="line"></span><br><span class="line">        System.out.println(isSame((<span class="keyword">short</span>) <span class="number">10</span>,(<span class="keyword">short</span>)<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(isSame(<span class="number">10</span>,<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(isSame(<span class="number">10L</span>,<span class="number">20L</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSame</span><span class="params">(<span class="keyword">byte</span> a, <span class="keyword">byte</span> b)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;两个byte方法执行&quot;</span>);</span><br><span class="line">        <span class="keyword">boolean</span> same;</span><br><span class="line">        <span class="keyword">if</span> (a == b) &#123;</span><br><span class="line">            same = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            same = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> same;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSame</span><span class="params">(<span class="keyword">short</span> a, <span class="keyword">short</span> b)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;两个short方法执行&quot;</span>);</span><br><span class="line">        <span class="keyword">boolean</span> same = a == b ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> same;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">boolean</span> <span class="title">isSame</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;两个int方法执行&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="方法重载练习题二"><a href="#方法重载练习题二" class="headerlink" title="方法重载练习题二"></a>方法重载练习题二</h3><p>要求：判断哪些方法是重载关系</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">// 正确重载</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">// 正确重载</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">// 代码错误 和 第八行冲突</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">int</span> b)</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">// 正确重载</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">double</span> b)</span>&#125;</span></span><br><span class="line"><span class="function"><span class="comment">// 代码错误 和 第六行冲突</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">double</span> d)</span>&#125;</span></span><br><span class="line"><span class="function"><span class="comment">// 代码错误 和 第五行冲突</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OPEN</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">// 代码正确 但并不是有效重载</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;&#125;</span><br><span class="line"><span class="comment">// 代码错误 和 第三行冲突</span></span><br></pre></td></tr></table></figure><h2 id="第九章-数组"><a href="#第九章-数组" class="headerlink" title="第九章 数组"></a>第九章 数组</h2><h3 id="数组的概念"><a href="#数组的概念" class="headerlink" title="数组的概念"></a>数组的概念</h3><blockquote><p>数组：是一种容器，可以同时存放多个数据值</p></blockquote><p>特点：</p><ul><li>数组是一种引用类型</li><li>数组当中的多个数据，类型必须统一</li><li>数组的程序在程序运行期间不可改变</li></ul><blockquote><p>数组的初始化：在内存当中创建一个数组，并向其中赋予一些默认值</p></blockquote><p>两种常见的初始化方式：</p><ul><li>动态初始化（指定长度）</li><li>静态初始化（指定内容）</li></ul><h3 id="动态初始化"><a href="#动态初始化" class="headerlink" title="动态初始化"></a>动态初始化</h3><p>动态初始化：在创建数组的时候，直接指定数组当中的数据元素个数</p><p>动态初始化组的格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据类型[] 数组名称 &#x3D; new 数据类型[数组长度];</span><br></pre></td></tr></table></figure><ul><li>解析含义：<ul><li>左侧数据类型：也就是数据当中保存的数据，全都是统一的什么型</li><li>左侧数组名称：给数组取一个名字</li><li>右侧的new：代表创建数组的动作</li><li>右侧数据类型：必须和左边的数据类型保持一致</li><li>右侧中括号的长度：也就是数组中，到底可以保存多少个数据，是一个int数字</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] arrayA = <span class="keyword">new</span> <span class="keyword">int</span> [<span class="number">300</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span>[] arrayB = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">String[] arrayC = <span class="keyword">new</span> String[<span class="number">5</span>];</span><br></pre></td></tr></table></figure><h3 id="静态初始化"><a href="#静态初始化" class="headerlink" title="静态初始化"></a>静态初始化</h3><p>静态初始化：在创建数组的时候，不直接指定数据个数多少，而是直接将具体的数据内容进行指定</p><p>静态初始化格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据类型[] 数组名称 &#x3D; new 数据类型[] &#123;元素1,元素2, ...&#125;;</span><br><span class="line">int[] arrayA &#x3D; new int[] &#123; 5, 15, 25 &#125;;</span><br><span class="line"></span><br><span class="line">String[] arrayB &#x3D; new int[] &#123; &quot;hello&quot;, &quot;world&quot;, &quot;java&quot; &#125;;</span><br></pre></td></tr></table></figure><p><strong>注意事项</strong></p><p>虽然静态初始化没有直接告诉长度，但根据大括号里边元素具体内容，也可以自动推算出来</p><h3 id="省略格式"><a href="#省略格式" class="headerlink" title="省略格式"></a>省略格式</h3><p>使用静态初始化数组的时候，格式还可以省略一下</p><p>标准格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据类型[] 数组名称 &#x3D; new 数据类型[] &#123;元素1,元素2, ...&#125;;</span><br></pre></td></tr></table></figure><p>省略格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据类型[] 数组名称 &#x3D; &#123;元素1, 元素2, ...&#125;;</span><br><span class="line">int[] arrayA &#x3D; &#123; 5, 15, 25 &#125;;</span><br><span class="line"></span><br><span class="line">String[] arrayB &#x3D; &#123; &quot;hello&quot;, &quot;world&quot;, &quot;java&quot; &#125;;</span><br></pre></td></tr></table></figure><p><strong>注意事项</strong></p><ul><li>静态初始化没有直接指定长度，但是仍会自动推算得到长度</li><li>静态初始化标准格式可以拆分为两个步骤</li><li>动态初始化也可以拆分成两个步骤</li><li>静态初始化一旦使用省略格式，就不能拆分</li></ul><p><strong>使用建议</strong>：如果不确定数组中具体内容，用动态初始化，否则，已经确定了具体内容，用静态初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 静态拆分</span></span><br><span class="line"><span class="keyword">int</span>[] arrayB;</span><br><span class="line">arrayB = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">5</span>, <span class="number">15</span>, <span class="number">25</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态拆分</span></span><br><span class="line"><span class="keyword">int</span>[] arrayC;</span><br><span class="line">arrayC = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br></pre></td></tr></table></figure><h3 id="访问数组元素进行获取-静态"><a href="#访问数组元素进行获取-静态" class="headerlink" title="访问数组元素进行获取-静态"></a>访问数组元素进行获取-静态</h3><p>直接打印数组名称，得到的是数组对应的：内存地址哈希值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] arrayA = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125;;</span><br><span class="line">System.out.println(arrayA); </span><br><span class="line"><span class="comment">// [I@5f184fc6</span></span><br></pre></td></tr></table></figure><p>访问数组元素的格式：数组名称[索引值]</p><p>【注意】索引值从0开始，一直到长度-1为止</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] arrayA = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125;;</span><br><span class="line">System.out.println(arrayA[<span class="number">0</span>]);</span><br><span class="line">System.out.println(arrayA[<span class="number">1</span>]);</span><br><span class="line">System.out.println(arrayA[<span class="number">2</span>]);</span><br><span class="line"><span class="comment">// 打印10</span></span><br></pre></td></tr></table></figure><p>将数组中单个元素赋值给变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> num = arrayA[<span class="number">1</span>];</span><br><span class="line">System.out.println(num);</span><br><span class="line"><span class="comment">// 20</span></span><br></pre></td></tr></table></figure><h3 id="访问数组元素进行赋值-动态"><a href="#访问数组元素进行赋值-动态" class="headerlink" title="访问数组元素进行赋值-动态"></a>访问数组元素进行赋值-动态</h3><p>使用动态初始化时，其中的元素将会自动拥有一个默认值</p><ul><li>整数类型：默认0</li><li>浮点类型：默认0.0</li><li>字符类型：默认为’\u0000’</li><li>布尔类型：默false</li><li>引用类型：默认null</li></ul><p>赋值：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">array[<span class="number">1</span>] = <span class="number">123</span>;</span><br><span class="line">System.out.println(array[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><p><strong>注意事项</strong></p><p>静态初始化起始也有默认值的过程，只不过系统自动马上将默认值替换成为了大括号当中的具体数值</p><h3 id="Java内存划分"><a href="#Java内存划分" class="headerlink" title="Java内存划分"></a>Java内存划分</h3><p>Java的内存需要划分为5个部分：</p><ul><li><p>栈（Stack）：存放的都是方法中的局部变量，</p><p>方法的运行一定要在栈当中</p><ul><li>局部变量：方法的参数，或者是方法{}内部的变量</li></ul></li><li><p>作用域：一旦超出作用域，立刻从栈内存当中消失</p></li><li><p>堆（Heep）：凡是new出来的东西，都在堆当中</p><ul><li>堆内存里边的东西都有一个地址值：16进制</li></ul></li><li><p>堆内存里边的数据都有默认值，规则</p></li><li><p><a href="http://localhost:4000/archives/1.html?t=1597369782377#guize">规则点我</a></p></li><li><p><strong>方法区：（Meth Area）</strong>：存储.class相关信息，包含方法的信息</p></li><li><p>本地方法栈（Native Method Stack）：与操作系统相关</p></li><li><p>寄存器（pc Register）：与CPU相关</p></li></ul><h3 id="一个数组的内存图"><a href="#一个数组的内存图" class="headerlink" title="一个数组的内存图"></a>一个数组的内存图</h3><p><img src="https://pic.downk.cc/item/5f28918514195aa5942397a2.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Aplayer</title>
      <link href="/posts/28080/"/>
      <url>/posts/28080/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><blockquote><p>这死这个功能了</p></blockquote><p><strong>示例</strong></p>    <div id="aplayer-mkrqKfLC" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="5134390497" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#C20C0C"    ></div><p><strong>or</strong></p>    <div id="aplayer-WsqYaopD" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="465921195" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#C20C0C"    ></div><hr><p> 安装<a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer</span><br></pre></td></tr></table></figure><blockquote><p><a herf="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md#%E5%AE%89%E8%A3%85">官方文档</a></p></blockquote><p>在根目录<code>_config.yml</code>中添加配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">cdn:</span> <span class="string">https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js</span></span><br><span class="line">  <span class="attr">style_cdn:</span> <span class="string">https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">meting_cdn:</span> <span class="string">https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 简单示例 (id, server, type)  --&gt;</span><br><span class="line">&#123;% meting &quot;60198&quot; &quot;netease&quot; &quot;playlist&quot; %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- 进阶示例 --&gt;</span><br><span class="line">&#123;% meting &quot;60198&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br></pre></td></tr></table></figure><p>有关<kbd>meting</kbd>的选项列表</p><table><thead><tr><th align="center">选项</th><th align="center">默认值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">id</td><td align="center"><strong>必须值</strong></td><td align="left">歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td align="center">server</td><td align="center"><strong>必须值</strong></td><td align="left">音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td></tr><tr><td align="center">type</td><td align="center"><strong>必须值</strong></td><td align="left"><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td></tr><tr><td align="center">fixed</td><td align="center"><code>false</code></td><td align="left">开启固定模式</td></tr><tr><td align="center">mini</td><td align="center"><code>false</code></td><td align="left">开启迷你模式</td></tr><tr><td align="center">loop</td><td align="center"><code>all</code></td><td align="left">列表循环模式：<code>all</code>, <code>one</code>,<code>none</code></td></tr><tr><td align="center">order</td><td align="center"><code>list</code></td><td align="left">列表播放模式： <code>list</code>, <code>random</code></td></tr><tr><td align="center">volume</td><td align="center"><code>0.7</code></td><td align="left">播放器音量</td></tr><tr><td align="center">lrctype</td><td align="center"><code>0</code></td><td align="left">歌词格式类型</td></tr><tr><td align="center">listfolded</td><td align="center"><code>false</code></td><td align="left">指定音乐播放列表是否折叠</td></tr><tr><td align="center">storagename</td><td align="center"><code>metingjs</code></td><td align="left">LocalStorage 中存储播放器设定的键名</td></tr><tr><td align="center">autoplay</td><td align="center"><code>true</code></td><td align="left">自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td align="center">mutex</td><td align="center"><code>true</code></td><td align="left">该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td align="center">listmaxheight</td><td align="center"><code>340px</code></td><td align="left">播放列表的最大长度</td></tr><tr><td align="center">preload</td><td align="center"><code>auto</code></td><td align="left">音乐文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td></tr><tr><td align="center">theme</td><td align="center">`#ad7a86`</td><td align="left">播放器风格色彩设置</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Aplayer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Aplayer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最后的问题</title>
      <link href="/posts/59224/"/>
      <url>/posts/59224/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><ul><li><a href="https://book.douban.com/subject/4834737/">最後的問題</a> - <a href="https://book.douban.com/author/4556848/">阿西莫夫</a></li></ul><blockquote><p>终于，“模”学会了怎样去逆转熵的方向。</p><p>但面对这最后问题的答案，“模”找不着任何人来告知。不过，那不打紧。这一答案――通过实践来表达――将连这一点也照顾在内。</p><p>又过了另一无时间的顷刻，“模”思索着最好的着手方法。小心翼翼地，“模”建立起整个程序。</p><p>“模”的意念统摄着一切，包括以往曾一度存在的宇宙；而对着现在“混沌”一片的存在，则正在沉思冥想。一步一步地，这程序必须被贯彻执行。</p><p>“模”说：“有光吧！”</p><p>于是就有了光――</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
